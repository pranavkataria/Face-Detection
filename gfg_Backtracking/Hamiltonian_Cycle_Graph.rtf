{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include<bits/stdc++.h>\
using namespace std;\
\
#define V 5\
\
bool isSafe(int v,bool graph[V][V],int path[],int pos)\{\
    if(graph[path[pos-1]][v]==0)\
        return false;\
        \
    for(int i=0;i<pos;i++)\
        if(path[i]==v)  \
            return false;\
    \
    return true;        \
\}\
\
bool hamCycleUtil(bool graph[V][V],int path[],int pos)\{\
    if(pos==V)\{\
        if(graph[path[pos-1]][path[0]]==1)\
            return true;\
        else\
            return false;\
    \}\
    \
    for(int v=1;v<V;v++)\{\
        if(isSafe(v,graph,path,pos))\{\
            path[pos]=v;\
            \
            if(hamCycleUtil(graph,path,pos+1)==true)\
                return true;\
            \
            path[pos]=-1;    \
        \}\
    \}\
    \
    return false;\
\}\
\
void printSolution(int path[])\{\
    cout<<"Solution Exists:";\
    \
    for(int i=0;i<V;i++)\
        cout<<path[i]<<" ";\
        \
    cout<<path[0]<<" "<<endl;\
\}\
\
bool hamCycle(bool graph[V][V])\{\
    int *path=new int[V];\
    \
    for(int i=0;i<V;i++)\
        path[i]=-1;\
    \
    path[0]=0;\
    \
    if(hamCycleUtil(graph,path,1)==false)\{\
        cout<<"\\nSolution does not exist:";\
        return false;\
    \}\
    printSolution(path);\
    \
    return true;\
\}\
\
int main()\{\
    bool graph1[V][V]=\{\{0, 1, 0, 1, 0\},  \
                        \{1, 0, 1, 1, 1\},  \
                        \{0, 1, 0, 0, 1\},  \
                        \{1, 1, 0, 0, 1\},  \
                        \{0, 1, 1, 1, 0\}\};  \
    \
    hamCycle(graph1);\
    \
    bool graph2[V][V]=\{\{0, 1, 0, 1, 0\},  \
                         \{1, 0, 1, 1, 1\},  \
                         \{0, 1, 0, 0, 1\},  \
                         \{1, 1, 0, 0, 0\},  \
                         \{0, 1, 1, 0, 0\}\}; \
                         \
    hamCycle(graph2);                     \
    \
    return 0;\
\}}