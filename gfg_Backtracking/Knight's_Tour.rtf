{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include<bits/stdc++.h>\
using namespace std;\
\
#define N 8\
\
int isSafe(int x,int y,int sol[N][N])\{\
    return (x>=0 && x<N && y>=0 && y<N && sol[x][y]==-1);\
\}\
\
int solveKTUtil(int x,int y,int movei,int sol[N][N],int xMove[N],int yMove[N])\{\
    int k,next_x,next_y;\
    \
    if(movei==N*N)\
        return 1;\
    \
    for(k=0;k<8;k++)\{\
        next_x=x+xMove[k];\
        next_y=y+yMove[k];\
        \
        if(isSafe(next_x,next_y,sol))\{\
            sol[next_x][next_y]=movei;\
            \
            if(solveKTUtil(next_x,next_y,movei+1,sol,xMove,yMove)==1)\
                return 1;\
            else\
                sol[next_x][next_y]=-1;\
        \}\
    \}\
    return 0;\
\}\
\
void printSolution(int sol[N][N])\{\
    for(int x=0;x<N;x++)\{\
        for(int y=0;y<N;y++)\
            cout<<setw(3)<<sol[x][y]<<" ";\
        cout<<endl;    \
    \}\
\}\
\
int solveKT()\{\
    int sol[N][N];\
    \
    for(int x=0;x<N;x++)\
        for(int y=0;y<N;y++)\
            sol[x][y]=-1;\
            \
    int xMove[8]=\{2,1,-1,-2,-2,-1,1,2\};\
    int yMove[8]=\{1,2,2,1,-1,-2,-2,-1\};\
    \
    sol[0][0]=0;\
    \
    if(solveKTUtil(0,0,1,sol,xMove,yMove)==0)\{\
        cout<<"Solution does not exist";\
        return 0;\
    \}\
    else\
        printSolution(sol);\
        \
    return 1;    \
\}\
\
int main()\{\
    solveKT();\
    \
    return 0;\
\}}