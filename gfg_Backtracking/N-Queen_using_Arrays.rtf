{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include<bits/stdc++.h>\
using namespace std;\
\
#define N 8\
\
bool isValid(int board[N][N],int row,int col)\{\
    \
    for(int i=0;i<col;i++)\
        if(board[row][i])\
            return false;\
    \
    for(int i=row,j=col;i>=0 && j>=0;i--,j--)\
        if(board[i][j])\
            return false;\
    \
    for(int i=row,j=col;j>=0 && i<N;i++,j--)\
        if(board[i][j])\
            return false;\
    \
    return true;        \
\}\
\
bool solveNQueen(int board[N][N],int col)\{\
    if(col>=N)\
        return true;\
    \
    for(int i=0;i<N;i++)\{\
        if(isValid(board,i,col))\{\
            board[i][col]=1;\
            if(solveNQueen(board,col+1))\
                return true;\
        \
            board[i][col]=0;    \
        \}    \
    \}\
    return false;\
\}\
\
void printBoard(int board[N][N])\{\
    for(int i=0;i<N;i++)\{\
        for(int j=0;j<N;j++)\
            cout<<board[i][j]<<" ";\
        cout<<endl;    \
    \}    \
\}\
\
bool checkSolution()\{\
    int board[N][N];\
    \
    for(int i=0;i<N;i++)\
        for(int j=0;j<N;j++)\
            board[i][j]=0;\
            \
    if(solveNQueen(board,0)==false)\{\
        cout<<"Solution does not exist";\
        return false;\
    \}        \
    \
    printBoard(board);\
    return true;\
\}\
\
int main()\{\
    checkSolution();\
    \
    return 0;\
\}}